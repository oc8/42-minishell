export B="h"; export A="c$B" ; e$A\o test
echo $USER '' $USER $USER '' $USER '' $USER -n $USER
echo \| "" \| "" "" \| "" "" "" \| '' '' '' \| '' '' \| '' \|
cat doesntexist 2>tmp/errors 1>tmp/file 2>tmp/file 2>>tmp/file 2>>tmp/errors ; cat tmp/errors tmp/file
;; test
~
/Users
.
/
export TOTO="test >>ck" ; echo 42 > a > coi$TOTO\toi >d 
export ; export TOTO="test >>ck" ; export ; echo 42 > a > coi$TOTO\toi >d 
export TOTO="test>>ck" ; echo 42 > a > coi$TOTO\toi >d 
export TOTO=test>>ck ; echo 42 > a > coi$TOTO\toi >d 
export
env
export TOTO2="1 2" ; export TOTO="test$TOTO2" ; echo 42 > a > coi$TOTO\toi >d
export TOTO3="un test" ; export TOTO2="1$TOTO3\3" ; export TOTO="4 5$TOTO2\6" ; echo 7$TOTO\8
echo 42 ; cat <<EOF -e ; echo fini
export TOTO="un test"; echo $TOTO ; cat <<$$TO'\\$TO'"\$TO\"" -e ; echo fini
echo a >> a ; ls | cat -e ; cat Makefile | grep CYAN | grep CYAN | cat -e | grep CYAN

echo $TOTO ; export $TOTO="un test" ; echo $TOTO

SSHLVL
exit ' 23 0'
exit 99999999999999
exit 9999999999999999999999999999999999999999999999999999999999999999999999
exit '   23       '

> output sans command
cat | > output << eof << abc | cat ; cat << aaa; 

ls | grep Makefile | cat -e << test
cat << ,.,//dkf,#f''?df | grep cyan
ls > test | cat << test | grep 1 | cat << test | grep 1
cat << test > test | cat << test
cat << test << test | grep 1
< test cat test >> test ; cat test
ls ; cat -e << test
cat << test << test < test_a_faire
cd - > test
cat > aa < bb
exit | exit 10a 10 ; echo $?
^C in fork

parsing error :
echo $/
echo "$"
$1
echo $1823980

bonus :
~
unset OLDPWD ; cd libft ; export | grep OLD ; cd -